Black Box Tests:

- ensure that malloc call in start_memory returns correctly
- ensure that get_memory does not return a partition that is more than double the required size
- ensure that grow_memory allocates extra memory to the end of a partition.
- ensure that if a partition cannot grow, grow_memory relocates the desired partition
- ensure that pregrow_memory adds memory to the front ofthe partition
- ensure that after release_memory, the location released is free and if the buddy of the location is freed, the buddies recombine
- ensure that end_memory find any memory that has not been released and frees the memory provided by the original malloc call

White Box Tests:

- ensure that the partitions are dividing into two equal   sizes
- ensure that all variables inthe buddyNode struct are intialized properly when a new buddy is created.
- ensure that buddies recombine
- ensure that non-buddies won't recombine
- ensure that partitions are not over-written if they are occupied
- ensure that memory locations are properly spaced and sized
- ensure that each buddy is either 'left' or 'right' buddy
- ensure that the partition size is correct accounting for the header and the 'size' provided
- ensure that buddies are marked as 'used' when they are occupied or divided, and 'not used' when they are empty
- ensure that when memory is released, the correct memory parition is marked as 'not used'
- ensure that the values are correct for both parition size and free memory in that partition
- ensure that the program is aware of the lowest level of buddies there are currently being used (smallest partition sizes)
- ensure that when a buddy is marked as 'not used' it checks to see if it's buddy is being used.
